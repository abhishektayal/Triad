
INSTRUCTIONS:

Download the tar file, and extract the files using tar -xvf timer-api.tar
Compile the code by typing make at the command line
Execute the test application by typing ./test-app at the command line.
Then use the library in your code by linking against timers.o and including
timers.hh in your paplication.


OPERATION:

The test application defines two timers: one that fires every 3
seconds and the other that fires every 10 seconds. The program
demonstrates how event queues can be used to keep track of multiple
timers using a single select call. 
The program can be terminated using Ctrl+C 

We have added a C language binding to the Timer API. To run the test
application using the C language binding type ./test-app-c 


USING THEM IN YOUR CODE:

The C++ API is in timers.hh,
and a C API is defined in timers-c.h.
Please read those files (and look at the examples in test-app.cc and
test-app-c.c to understand how to use the library).

It should be easy to link against this code in your program;
see the details in the Makefile.

If you use these in your class project, make sure you SUBMIT the timer
code WITH the rest of your project.  We will not add it ourselves.



FILES : 

Test Application using C-language binding: test-app-c.c
Test Application in C++                  : test-app.cc,test-app.hh
Timer Functions	binding in C		 : timers-c.cc, timers-c.h
Timer Functions				 : timers.cc timers.hh
Helper Functions			 : tools.cc  tools.hh

   -John Heidemann
$Id: README 2163 2007-02-02 23:39:15Z johnh $
